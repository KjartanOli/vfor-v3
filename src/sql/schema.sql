CREATE TABLE IF NOT EXISTS teams (
  id SERIAL PRIMARY KEY,
  slug VARCHAR(128) NOT NULL UNIQUE,
  name VARCHAR(128) NOT NULL UNIQUE,
  description VARCHAR(1024)
);

CREATE TABLE IF NOT EXISTS games (
  id SERIAL PRIMARY KEY,
  date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT current_timestamp,
  home INTEGER NOT NULL REFERENCES teams(id),
  away INTEGER NOT NULL REFERENCES teams(id),
  home_score INTEGER NOT NULL CHECK (home_score >= 0),
  away_score INTEGER NOT NULL CHECK (away_score >= 0)
);

CREATE TABLE IF NOT EXISTS users (
  id CHAR(15) PRIMARY KEY,
  username VARCHAR(60) NOT NULL UNIQUE,
  name VARCHAR(60) NOT NULL,
  password CHAR(97) NOT NULL,
  admin BOOLEAN DEFAULT false
);

CREATE TABLE user_session (
    id VARCHAR(50) PRIMARY KEY,
    expires_at TIMESTAMPTZ NOT NULL,
    user_id CHAR(15) NOT NULL REFERENCES users(id)
);

CREATE OR REPLACE FUNCTION delete_team_games()
RETURNS TRIGGER AS $$
BEGIN
DELETE FROM games 
WHERE home = OLD.id OR away = OLD.id;
RETURN OLD;
END;
$$
LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER before_team_delete BEFORE DELETE ON teams
FOR EACH ROW
EXECUTE FUNCTION delete_team_games();
